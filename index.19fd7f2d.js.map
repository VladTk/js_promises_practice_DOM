{"mappings":"ACEA,IAAI,EAAe,CAAA,EACf,EAAe,CAAA,EAEb,EAAmB,SAAC,CAA1B,EAAmC,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,EAAA,SAAA,CAAA,EAAA,CAC3B,EAAe,SAAS,aAAa,CAAC,OAE5C,EAAa,YAAY,CAAC,UAAW,gBACrC,EAAa,SAAS,CAAG,EAAU,QAAU,UAC7C,EAAa,WAAW,CAAG,EAE3B,SAAS,IAAI,CAAC,WAAW,CAAC,EAC5B,EAEM,EAAe,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EACE,SAAS,gBAAgB,CAAC,QAAS,WACjC,EAAe,CAAA,EACf,EAAQ,6BACV,GAGA,WAAW,WAAM,OAAA,EAAO,6BAA+B,EAAA,IACzD,GAEM,EAAgB,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA5C,EACE,SAAS,gBAAgB,CAAC,QAAS,WACjC,EAAe,CAAA,EACf,EAAQ,8BACV,GAEA,SAAS,gBAAgB,CAAC,cAAe,SAAC,CAA1C,EACE,EAAE,cAAc,GAChB,EAAe,CAAA,EACf,EAAQ,8BACV,EACF,GAEM,EAAe,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EACE,IAAM,EAA0B,WAC1B,GAAgB,GAClB,EAAQ,6BAEZ,EAEA,SAAS,gBAAgB,CAAC,QAAS,WACjC,EAAe,CAAA,EACf,GACF,GAEA,SAAS,gBAAgB,CAAC,cAAe,SAAC,CAA1C,EACE,EAAE,cAAc,GAChB,EAAe,CAAA,EACf,GACF,EACF,GAEA,EAAa,IAAI,CACf,SAAC,CADH,EACe,OAAA,EAAiB,EAAS,CAAA,EACvC,EAAA,SAAC,CAAD,EAAa,OAAA,EAAiB,EAAS,CAAA,E,GAGzC,EAAc,IAAI,CAAC,SAAC,CAApB,EAAgC,OAAA,EAAiB,EAAS,CAAA,E,GAC1D,EAAa,IAAI,CAAC,SAAC,CAAnB,EAA+B,OAAA,EAAiB,EAAS,CAAA,E","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar isLMBPressed = false;\nvar isRMBPressed = false;\nvar showNotification = function(message) {\n    var isError = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n    var notification = document.createElement(\"div\");\n    notification.setAttribute(\"data-qa\", \"notification\");\n    notification.className = isError ? \"error\" : \"success\";\n    notification.textContent = message;\n    document.body.appendChild(notification);\n};\nvar firstPromise = new Promise(function(resolve, reject) {\n    document.addEventListener(\"click\", function() {\n        isLMBPressed = true;\n        resolve(\"First promise was resolved\");\n    });\n    // eslint-disable-next-line prefer-promise-reject-errors\n    setTimeout(function() {\n        return reject(\"First promise was rejected\");\n    }, 3000);\n});\nvar secondPromise = new Promise(function(resolve, reject) {\n    document.addEventListener(\"click\", function() {\n        isLMBPressed = true;\n        resolve(\"Second promise was resolved\");\n    });\n    document.addEventListener(\"contextmenu\", function(e) {\n        e.preventDefault();\n        isRMBPressed = true;\n        resolve(\"Second promise was resolved\");\n    });\n});\nvar thirdPromise = new Promise(function(resolve, reject) {\n    var checkBothButtonsPressed = function() {\n        if (isLMBPressed && isRMBPressed) resolve(\"Third promise was resolved\");\n    };\n    document.addEventListener(\"click\", function() {\n        isLMBPressed = true;\n        checkBothButtonsPressed();\n    });\n    document.addEventListener(\"contextmenu\", function(e) {\n        e.preventDefault();\n        isRMBPressed = true;\n        checkBothButtonsPressed();\n    });\n});\nfirstPromise.then(function(message) {\n    return showNotification(message, false);\n}, function(message) {\n    return showNotification(message, true);\n});\nsecondPromise.then(function(message) {\n    return showNotification(message, false);\n});\nthirdPromise.then(function(message) {\n    return showNotification(message, false);\n});\n\n//# sourceMappingURL=index.19fd7f2d.js.map\n","'use strict';\n\nlet isLMBPressed = false;\nlet isRMBPressed = false;\n\nconst showNotification = (message, isError = false) => {\n  const notification = document.createElement('div');\n\n  notification.setAttribute('data-qa', 'notification');\n  notification.className = isError ? 'error' : 'success';\n  notification.textContent = message;\n\n  document.body.appendChild(notification);\n};\n\nconst firstPromise = new Promise((resolve, reject) => {\n  document.addEventListener('click', () => {\n    isLMBPressed = true;\n    resolve('First promise was resolved');\n  });\n\n  // eslint-disable-next-line prefer-promise-reject-errors\n  setTimeout(() => reject('First promise was rejected'), 3000);\n});\n\nconst secondPromise = new Promise((resolve, reject) => {\n  document.addEventListener('click', () => {\n    isLMBPressed = true;\n    resolve('Second promise was resolved');\n  });\n\n  document.addEventListener('contextmenu', (e) => {\n    e.preventDefault();\n    isRMBPressed = true;\n    resolve('Second promise was resolved');\n  });\n});\n\nconst thirdPromise = new Promise((resolve, reject) => {\n  const checkBothButtonsPressed = () => {\n    if (isLMBPressed && isRMBPressed) {\n      resolve('Third promise was resolved');\n    }\n  };\n\n  document.addEventListener('click', () => {\n    isLMBPressed = true;\n    checkBothButtonsPressed();\n  });\n\n  document.addEventListener('contextmenu', (e) => {\n    e.preventDefault();\n    isRMBPressed = true;\n    checkBothButtonsPressed();\n  });\n});\n\nfirstPromise.then(\n  (message) => showNotification(message, false),\n  (message) => showNotification(message, true),\n);\n\nsecondPromise.then((message) => showNotification(message, false));\nthirdPromise.then((message) => showNotification(message, false));\n"],"names":["isLMBPressed","isRMBPressed","showNotification","message","isError","arguments","length","notification","document","createElement","setAttribute","className","textContent","body","appendChild","firstPromise","Promise","resolve","reject","addEventListener","setTimeout","secondPromise","e","preventDefault","thirdPromise","checkBothButtonsPressed","then"],"version":3,"file":"index.19fd7f2d.js.map"}